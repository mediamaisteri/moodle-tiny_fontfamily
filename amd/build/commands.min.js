define("tiny_fontfamily/commands",["exports","editor_tiny/utils","core/str","./common"],(function(_exports,_utils,_str,_common){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0;
/**
   * Commands helper for the Moodle tiny_fontfamily plugin.
   *
   * @module      plugintype_pluginname/commands
   * @copyright   2023 Mikko Haiku <mikko.haiku@mediamaisteri.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const handleAction=(editor,fontfamily)=>{editor.selection.dom.setAttrib(editor.selection.getNode(),"style","font-family: "+fontfamily)};_exports.getSetup=async()=>{const[fontfamilyButtonNameTitle,fontfamilyMenuItemNameTitle,buttonImage]=await Promise.all([(0,_str.get_string)("button_fontfamily",_common.component),(0,_str.get_string)("menuitem_fontfamily",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]);return editor=>{editor.ui.registry.addIcon(_common.icon,buttonImage.html),editor.ui.registry.addButton(_common.fontfamilyButtonName,{icon:_common.icon,tooltip:fontfamilyButtonNameTitle,onAction:()=>handleAction(editor)}),editor.ui.registry.addMenuItem(_common.fontfamilyMenuItemName,{icon:_common.icon,text:fontfamilyMenuItemNameTitle,onAction:()=>handleAction(editor)});function handlefontfamily(editor,family){return()=>handleAction(editor,family)}const submenuItems=[{family:"Arial",label:"Arial"},{family:"Verdana",label:"Verdana"},{family:"Tahoma",label:"Tahoma"},{family:"Trebuchet MS",label:"Trebuchet MS"},{family:"Times New Roman",label:"Times New Roman"},{family:"Georgia",label:"Georgia"},{family:"Garamond",label:"Garamond"},{family:"Courier New",label:"Courier New"},{family:"Brush Script MT",label:"Brush Script MT"}].map((_ref=>{let{family:family,label:label}=_ref;return{type:"menuitem",text:label,onAction:handlefontfamily(editor,family)}}));editor.ui.registry.addNestedMenuItem(_common.fontfamilyMenuItemName,{icon:_common.icon,text:fontfamilyMenuItemNameTitle,getSubmenuItems:()=>submenuItems})}}}));

//# sourceMappingURL=commands.min.js.map